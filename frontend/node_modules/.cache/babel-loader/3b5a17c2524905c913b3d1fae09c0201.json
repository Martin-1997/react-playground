{"ast":null,"code":"var _jsxFileName = \"/home/martin/IT/git/react-playground/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport About from './components/About';\nimport Settings from './components/Settings';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport FlightPage from './components/FlightPage';\nimport { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport useFetch from './useFetch';\nimport FlightDetails from './components/FlightDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*\n  All the data required is fetched and managed in the top level container (App). From there, the data is passed to the subcomponents.\n  I am not sure if this is the best approach or if it is better to query the required data on the submodule level.\n  */\n  const [flights, setFlights] = useState(null);\n  const [airports, setAirports] = useState(null);\n  const [countries, setCountries] = useState(null);\n  const [airlines, setAirlines] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(false); // Use custom hook\n  // const { data, isPending, Error} = useFetch(`http://localhost:2045/data`)\n  // useEffect runs a function after every render of the component\n  // If the state of the page is changed in useEffect, this triggers a rerender and then an infinite loop\n\n  useEffect(() => {\n    // Function to fetch the data from the API\n    // const fetchData = async (key) => {\n    //   const res = await fetch(`http://localhost:2045/${key}`)\n    //   const data = await res.json()\n    //   return data\n    // }\n    // try{\n    // fetchData(\"airports\").then((data) => {\n    //   setAirports(data)\n    // })\n    // fetchData(\"flights\").then((data) => {\n    //   setFlights(data)\n    // })\n    // fetchData(\"countries\").then((data) => {\n    //   setCountries(data)\n    // })\n    // fetchData(\"airlines\").then((data) => {\n    //   setAirlines(data)\n    //   //This does not work for multiple data stream which need to be loaded - either it needs to be check for each individual one or all the data is loaded in one statement\n    //   setIsPending(false)\n    // })\n    // }\n    // catch(err) {\n    //   console.log(err)\n    // }\n    fetch(`http://localhost:6005/`).then(res => {\n      // Check if the response is not valid\n      if (!res.ok) {\n        throw Error(\"could not fetch valid data\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setAirports(data[\"airports\"]);\n      setFlights(data[\"flights\"]);\n      setCountries(data[\"countries\"]);\n      setAirlines(data[\"airlines\"]);\n      setError(false);\n      setIsPending(false);\n    }).catch(error => {\n      setError(error.message);\n      setIsPending(false);\n    });\n  }, []); // empty dependency array -> onl< runs the function after the initial rendering, additional variables which should be watched can be added to the array\n\n  return (\n    /*#__PURE__*/\n    // Make Router available in the whole app\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 28\n          }, this), \"Loading ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 24\n          }, this), error, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }, this), airports && flights && countries && airlines && /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/flights\",\n              element: /*#__PURE__*/_jsxDEV(FlightPage, {\n                flights: flights,\n                airports: airports,\n                countries: countries,\n                airlines: airlines\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/flightDetails/:id\",\n              element: /*#__PURE__*/_jsxDEV(FlightDetails, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/settings\",\n              element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/admin\",\n              element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"j3a/XuYHgofyT8ltfNKrUoSChHo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Footer","Main","About","Settings","BrowserRouter","Router","Route","Routes","Link","FlightPage","useState","useEffect","Container","useFetch","FlightDetails","App","flights","setFlights","airports","setAirports","countries","setCountries","airlines","setAirlines","isPending","setIsPending","error","setError","fetch","then","res","ok","Error","json","data","catch","message"],"sources":["/home/martin/IT/git/react-playground/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport About from './components/About';\nimport Settings from './components/Settings';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom'\nimport FlightPage from './components/FlightPage';\nimport { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport useFetch from './useFetch';\nimport FlightDetails from './components/FlightDetails';\n\nfunction App() {\n  /*\n  All the data required is fetched and managed in the top level container (App). From there, the data is passed to the subcomponents.\n  I am not sure if this is the best approach or if it is better to query the required data on the submodule level.\n  */\n  const [flights, setFlights] = useState(null)\n  const [airports, setAirports] = useState(null)\n  const [countries, setCountries] = useState(null)\n  const [airlines, setAirlines] = useState(null)\n\n  const [isPending, setIsPending] = useState(true)\n  const [error, setError] = useState(false)\n\n  // Use custom hook\n  // const { data, isPending, Error} = useFetch(`http://localhost:2045/data`)\n\n  // useEffect runs a function after every render of the component\n  // If the state of the page is changed in useEffect, this triggers a rerender and then an infinite loop\n  useEffect(() => {\n    // Function to fetch the data from the API\n    // const fetchData = async (key) => {\n    //   const res = await fetch(`http://localhost:2045/${key}`)\n    //   const data = await res.json()\n    //   return data\n    // }\n    // try{\n    // fetchData(\"airports\").then((data) => {\n    //   setAirports(data)\n    // })\n\n    // fetchData(\"flights\").then((data) => {\n    //   setFlights(data)\n    // })\n\n    // fetchData(\"countries\").then((data) => {\n    //   setCountries(data)\n    // })\n\n    // fetchData(\"airlines\").then((data) => {\n    //   setAirlines(data)\n    //   //This does not work for multiple data stream which need to be loaded - either it needs to be check for each individual one or all the data is loaded in one statement\n    //   setIsPending(false)\n    // })\n    // }\n    // catch(err) {\n    //   console.log(err)\n    // }\n    fetch(`http://localhost:6005/`)\n      .then((res) => {\n        // Check if the response is not valid\n        if (!res.ok) {\n          throw Error(\"could not fetch valid data\")\n        }\n        return res.json()\n      })\n      .then((data) => {\n        setAirports(data[\"airports\"])\n        setFlights(data[\"flights\"])\n        setCountries(data[\"countries\"])\n        setAirlines(data[\"airlines\"])\n        setError(false)\n        setIsPending(false)\n      })\n      .catch(error => {\n        setError(error.message)\n        setIsPending(false)\n      })\n  }, []) // empty dependency array -> onl< runs the function after the initial rendering, additional variables which should be watched can be added to the array\n\n\n\n  return (\n    // Make Router available in the whole app\n    <Router>\n      <div className='app'>\n        <Header></Header>\n        {isPending && <div><br />Loading ...<br /><br /></div>}\n        {error && <div><br />{ error }<br /><br /></div>}\n        {/* Only load the elements when the data is loaded */}\n        {(airports && flights && countries && airlines) &&\n          <Container>\n            {/* Switch component in earlier versions of React router. Here we can switch between different pages */}\n            <Routes >\n              <Route exact path=\"/\" element={<Main />}>\n              </Route>\n              <Route exact path=\"/flights\" element={<FlightPage flights={flights} airports={airports} countries={countries} airlines={airlines} ></FlightPage>}>\n              </Route>\n              {/* Use route parameters */}\n              <Route exact path=\"/flightDetails/:id\" element={<FlightDetails></FlightDetails>}>\n              </Route>\n              <Route exact path=\"/settings\" element={<Settings></Settings>}>\n              </Route>\n              <Route exact path=\"/about\" element={<About></About>}>\n              </Route>\n              <Route exact path=\"/admin\" element={<Admin></Admin>}>\n              </Route>\n            </Routes>\n          </Container>\n        }\n        <Footer></Footer>\n      </div >\n    </Router >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}