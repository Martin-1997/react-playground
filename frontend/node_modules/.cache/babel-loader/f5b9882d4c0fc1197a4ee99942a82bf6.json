{"ast":null,"code":"var _jsxFileName = \"/home/martin/IT/git/react-playground/frontend/src/components/Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from './Button';\nimport FlightList from './FlightList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  let {\n    flights\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to this flight search app. It will allow you to query sophistically for flights which match your requirements.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this) // <div>\n  //     <Button color={showAddTask ? \"red\" : \"green\"} text={showAddTask ? \"Close\" : \"Open\"} onClick={(e) => setShowAddTask(!showAddTask)}></Button>\n  //     {showAddTask && <AddTask className='container' onAdd={addTask}></AddTask>}\n  //     {/* ternary operator without an else */}\n  //     <div className='container'>\n  //         {tasks.length > 0 ?\n  //             <Tasks tasks={tasks} onDelete={deleteTask} switchTaskReminder={switchTaskReminder}></Tasks> : 'No tasks available'\n  //         }\n  //     </div>\n  // </div>\n  ;\n};\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Button","FlightList","Main","flights"],"sources":["/home/martin/IT/git/react-playground/frontend/src/components/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Button from './Button';\nimport FlightList from './FlightList';\n\n\n\n\nconst Main = ({ flights }) => {\n    return (\n        <div>\n            <p>Welcome to this flight search app. It will allow you to query sophistically for flights which match your requirements.</p>\n        </div>\n        // <div>\n        //     <Button color={showAddTask ? \"red\" : \"green\"} text={showAddTask ? \"Close\" : \"Open\"} onClick={(e) => setShowAddTask(!showAddTask)}></Button>\n        //     {showAddTask && <AddTask className='container' onAdd={addTask}></AddTask>}\n        //     {/* ternary operator without an else */}\n\n        //     <div className='container'>\n        //         {tasks.length > 0 ?\n        //             <Tasks tasks={tasks} onDelete={deleteTask} switchTaskReminder={switchTaskReminder}></Tasks> : 'No tasks available'\n        //         }\n        //     </div>\n        // </div>\n    );\n}\n\nexport default Main;\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAKA,MAAMC,IAAI,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC1B,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ,CAII;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAdJ;AAgBH,CAjBD;;KAAMD,I;AAmBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}